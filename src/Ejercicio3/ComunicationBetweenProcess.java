package Ejercicio3;/*@author Alejandro Cruz */import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.Arrays;public class ComunicationBetweenProcess {    public static void main(String[] args)  {        try{            Process process = new ProcessBuilder(args[0]).start();            InputStream is = process.getInputStream();            InputStreamReader isr = new InputStreamReader(is,"Cp850");            BufferedReader br = new BufferedReader(isr);            String line;            System.out.println("Salida del proceso " + Arrays.toString(args) + ":");                while ((line = br.readLine()) != null) {                    System.out.println(line);                }        } catch (IOException  e) {            System.exit(-1);        }    }  /*A) Se obtiene por consola el resultado de la salida de ejecutar el proceso cmd.exe ,siguiendo los siguientes pasos          1) Crea el proceso.          2) Lee el contenido de la salida del procesos.          3) Abre un BufferedReader y se le pasa el contenido de la salida.          4) Se recorre y muestra el contenido de Buffered reader linea a linea.  */  /*B) He probado con UTF-8 pero solo funcionaria en sistemas operativos UNIX como se indica en el enunciado,pero debido a que  la salida del Cmd en windows no se produce en UTF-8 si no en Cp850 en las tildes se obtenia un caracter raro ?.Tras encontrar  que el problema era por eso y cambiar a el otro encoding se soluciono.  */  /*C)Se ponen las excepciones eliminando el throw que venia en el codigo y poniendo una estructura try catch()  Por mucho que haga el close no se esta cerrando debido a que esta en otro proceso y el programa continua corriendo.  Me gustaria conocer la solucion a lo citado arriba ya que lo he buscado en numerosas webs y no consigo dar con ella  */}